// <auto-generated />
using AIService.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AIService.Migrations
{
    [DbContext(typeof(AIContext))]
    partial class AIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AIService.Database.Entities.BotDataEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BotId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BotId");

                    b.HasIndex("Role");

                    b.ToTable("BotDatas");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BotId = 1L,
                            Content = "My name is Ali",
                            Name = "Initial",
                            Role = "system"
                        });
                });

            modelBuilder.Entity("AIService.Database.Entities.BotEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Bots");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Model = "gpt-4",
                            Name = "Main",
                            TenantId = 1L
                        });
                });

            modelBuilder.Entity("AIService.Database.Entities.BotDataEntity", b =>
                {
                    b.HasOne("AIService.Database.Entities.BotEntity", "Bot")
                        .WithMany("BotDatas")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bot");
                });

            modelBuilder.Entity("AIService.Database.Entities.BotEntity", b =>
                {
                    b.Navigation("BotDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
